//Example to reconstruct fine solution
verbosity=0;
macro dimension 2//EOM"
macro fspace 2//EOM"
include "macros.idp"
SolutionDir=getARGV("-SolDir","3_ICEBERG/");

Vh<complex> dispX, dispY;
/*
macro constructFineSpace(nfreq, index, complex[int], complex[int] ):

Description:
- Saves the entire solution in complex[int,int] UXT, UYT. (Predefined)
- Extract the solution "index" from the frequency space and store in Vectors
- Also saves a .vtk file corresponding to the disk.
*/
constructFineSpace(nfreq,59,dispX[],dispY[],-1); 


//Do stuff with the full interpolated solution UXT, UYT.
complex[int] disp(Vh.ndof);
ofstream file1(SolutionDir+"dispVsFreq"+iter+".dat");
ofstream file2(SolutionDir+"strainVsFreq"+iter+".dat");
for(int m=0; m<nfreq; m++)
{
    disp=UXT(:,m);
    dispX[]=disp;        
    disp=UYT(:,m);
    dispY[]=disp;

    Vh absDispX=abs(dispX), absDispY=abs(dispY);
    Lc=756.196;    
    Vh absexx=abs(epsilon(dispX,dispY)[0])/Lc,abseyy=abs(epsilon(dispX,dispY)[2])/Lc,absexy=abs(epsilon(dispX,dispY)[1])/Lc;    
    {        
        file1<<absDispX[].max<<"\t"<<absDispY[].max<<endl;
        file2<<absexx[].max<<"\t"<<abseyy[].max<<"\t"<<absexy[].max<<endl;
    }
}


