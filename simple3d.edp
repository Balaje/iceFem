//Simple example to solve 3d problem.

verbosity=0;
macro dimension 3//EOM"
macro fspace 1//EOM"
include "macros.idp"

SolutionDir="1_SIMPLE3D/";

setMeshIceCav3d;
complex alpha=omega^2/10;
//cout<<alpha<<endl;
k=dispersionfreesurface(alpha,NModes,HH);
k[0]=-k[0];
kd=k;
dd=0;

//---- Find the eigenvalues of the dispersion relation.
Xh[int][VX,VY,VZ](nev);
real[int] ev(nev);
solveEigen;
writeEigen(1,1);


Wh<complex> chi1;
matrix<complex> MQ1, MQ2;
getQphi(5,MQ2); //Outlet
getQphi(4,MQ1); //Inlet
getChi;
for(int m=0; m<NModes+1; m++)    
    chi1 = chi1+ctilde[m]*cos(kd[m]*(y+HH))/cos(kd[m]*HH);

if(mpirank==0)
    cout<<"Done Non-local boundary condition"<<endl;

Wh<complex> phi0;
func fh=chi1;
getLaplaceMat(0,0,0);
LHS=STIMA+(MQ1)+(-MQ2)+(-BMASSMA);
set(LHS,solver=sparsesolver);
phih[]=LHS^-1*RHS[];
phi0=phih;
if(mpirank==0)
    cout<<"Done diffraction potential "<<endl;
savevtk("sol.vtu",ThCavity,real(phi0),dataname="RePhi");
