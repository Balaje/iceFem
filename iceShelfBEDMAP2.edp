//Program to generate the meshes using the data from BEDMAP2

verbosity=0.;

load "lapack"
include "spline.idp"


ifstream file("./Meshes/BEDMAP2/iceDat.dat");
ifstream file1("./Meshes/BEDMAP2/iceCavInt_Breaks.dat");
ifstream file2("./Meshes/BEDMAP2/iceCavInt_Coeffs.dat");
ifstream file3("./Meshes/BEDMAP2/iceTop_Breaks.dat");
ifstream file4("./Meshes/BEDMAp2/iceTop_Coeffs.dat");

real iceBegin, iceEnd;
int npieces;
file>>iceBegin>>iceEnd>>npieces;

real[int,int] coefsBot(npieces,4), coefsTop(npieces,4);
real[int] breaksBot(npieces+1), breaksTop(npieces+1);

for(int m=0; m<npieces; m++)  
  file2>>coefsBot(m,0)>>coefsBot(m,1)>>coefsBot(m,2)>>coefsBot(m,3);  
for(int m=0; m<npieces+1; m++)  
  file1>>breaksBot[m];
for(int m=0; m<npieces; m++)
  file4>>coefsTop(m,0)>>coefsTop(m,1)>>coefsTop(m,2)>>coefsTop(m,3);
for(int m=0; m<npieces+1; m++)
  file3>>breaksTop[m];

cout<<breaksTop<<endl;
cout<<splineRecon(coefsBot,breaksBot,iceEnd,npieces)<<endl;
cout<<splineRecon(coefsTop,breaksTop,iceEnd,npieces)<<endl;

border C01(t=iceBegin,iceEnd){x=t; y=splineRecon(coefsBot,breaksBot,t,npieces); label=1;};

border C02(t=splineRecon(coefsBot,breaksBot,iceEnd,npieces),
           splineRecon(coefsTop,breaksTop,iceEnd,npieces)){x=iceEnd; y=t; label=2;};

border C03(t=iceEnd,iceBegin){x=t; y=splineRecon(coefsTop,breaksTop,t,npieces); label=3;};

border C04(t=splineRecon(coefsTop,breaksTop,iceBegin,npieces),
           splineRecon(coefsBot,breaksBot,iceBegin,npieces)){x=iceBegin; y=t; label=4;};

mesh Th=buildmesh(C01(1000)+C02(200)+C03(1000)+C04(200));

plot(Th,wait=1);
savemesh(Th,"iceMeshBEDMAP.msh");
