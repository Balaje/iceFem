###################################################################################
# Python script to compute the peak locations in the theoretical strain spectrum
# NOTE: Before running this script, make sure that the following files are present
#           [YOURDIR]/dispVsFreq.py
#           [YOURDIR]/strainVsFreq.py
# These are generated by the getSolutionInterp.edp FreeFem script.
# See the bash script run-script.sh for more information.
#
# Run:
#           python3 RealFreqIce.py ICEBERG1/
#           python3 RealFreqIce.py ICEBERG1.5/
#
# Load the strain/displacement vs frequency plots.
# Find Peaks in the frequency domain.
###################################################################################

import numpy as np
import matplotlib
import matplotlib.pyplot as plt
import sys
import time
from scipy.signal import find_peaks
font = {'weight' : 'normal',
        'size'   : 15}
matplotlib.rc('font', **font)

filePath = sys.argv[1]
pi = np.pi
omega = 2*pi*np.linspace(0.01,0.125,21)
T = 2*pi/omega
dispVsFreq = np.loadtxt(filePath+"/dispVsFreq.dat")
strainVsFreq = np.loadtxt(filePath+"/strainVsFreq.dat")
npts = len(dispVsFreq)
nev = 10
omeganew = 2*pi*np.linspace(0.01,0.125,npts)


plt.figure(figsize=[10,4])
plt.semilogy(omeganew/(2*pi), dispVsFreq[:,0],label='$u_x$')
plt.semilogy(omeganew/(2*pi), dispVsFreq[:,1],label='$u_y$')
peaks0, _ = find_peaks(dispVsFreq[:,0], prominence=1e-3, distance=20)
plt.semilogy(omeganew[peaks0]/(2*pi), dispVsFreq[peaks0,0],"x")
peaks1, _ = find_peaks(dispVsFreq[:,1], prominence=1e-3, distance=20)
plt.semilogy(omeganew[peaks1]/(2*pi), dispVsFreq[peaks1,1],"x")
plt.legend()
plt.xlabel("$\\frac{\omega}{2\pi}$")
plt.ylabel("$||u_x||_{\infty}\;\;\;\\mathrm{or}\;\;\;||u_y||_{\infty}$")

plt.figure(figsize=[10,4])
plt.semilogy(omeganew/(2*pi), strainVsFreq[:,0],label='$\epsilon_{xx}$')
plt.semilogy(omeganew/(2*pi), strainVsFreq[:,1],label='$\epsilon_{yy}$')
plt.semilogy(omeganew/(2*pi), strainVsFreq[:,2],label='$\epsilon_{xy}$')
peaks0, _ = find_peaks(strainVsFreq[:,0], prominence=1e-6)
plt.semilogy(omeganew[peaks0]/(2*pi), strainVsFreq[peaks0,0],"x")
peaks1, _ = find_peaks(strainVsFreq[:,1], prominence=1e-6)
plt.semilogy(omeganew[peaks1]/(2*pi), strainVsFreq[peaks1,1],"x")
peaks2, _ = find_peaks(strainVsFreq[:,2], prominence=1e-6)
plt.semilogy(omeganew[peaks2]/(2*pi), strainVsFreq[peaks2,2],"x")
plt.legend()
plt.xlabel("$\\frac{\omega}{2\pi}$")
plt.ylabel("$||\epsilon_{xx}||_{\infty}\;\;\\mathrm{or}\;\;||\epsilon_{yy}||_{\infty}\;\;\\mathrm{or}\;\;||\epsilon_{xy}||_{\infty}$")

plt.show()
